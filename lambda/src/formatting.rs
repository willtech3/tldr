//! Formatting utilities for Slack messages
//!
//! This module provides standardized formatting for various types of messages
//! sent through the Slack API.

/// Format a summary message based on visibility settings
///
/// This function creates a formatted message for Slack based on whether the command
/// should be visible to others or not. When visible is true, it includes attribution
/// information showing who ran the command and with what parameters.
///
/// # Arguments
///
/// * `user_id` - The Slack user ID of the person who ran the command
/// * `source_channel_id` - The Slack channel ID where the command was run
/// * `text` - Any additional parameters passed with the command
/// * `summary` - The actual summary text generated by ChatGPT
/// * `visible` - Whether to include attribution information (true) or just the summary (false)
///
/// # Returns
///
/// A formatted string ready to be sent to Slack
///
/// # Examples
///
/// ```
/// use tldr::format_summary_message;
///
/// // Create a visible summary with attribution
/// let visible_message = format_summary_message(
///     "U12345",
///     "C67890",
///     "last 10",
///     "*Summary from #general*\nKey points discussed.",
///     true
/// );
///
/// // Create an anonymous summary without attribution
/// let private_message = format_summary_message(
///     "U12345",
///     "C67890",
///     "last 10",
///     "*Summary from #general*\nKey points discussed.",
///     false
/// );
/// ```
pub fn format_summary_message(
    user_id: &str,
    source_channel_id: &str,
    text: &str,
    summary: &str,
    visible: bool,
) -> String {
    if visible {
        // Format parameters to show in the announcement message when visible
        let mut parameter_text = format!("<@{}> ran `/tldr` in <#{}>", user_id, source_channel_id);

        // Add additional parameters if specified
        if !text.is_empty() {
            parameter_text = format!("{} with parameters: `{}`", parameter_text, text);
        }

        // Format with parameter text and summary
        format!("{}\n\n{}", parameter_text, summary)
    } else {
        // Just the summary if not visible
        summary.to_string()
    }
}
